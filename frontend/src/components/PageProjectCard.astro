---
import { q, type TypeFromSelection, type Selection, sanityImage } from 'groqd'
import { Badge } from '@/components/ui/badge'
import PortableTextImage from '@/components/PortableTextImage.astro'

export const pageProjectSelection = {
  slug: ['slug.current', q.string()],
  mainImage: sanityImage('mainImage', { withCrop: true }).nullable(),
  title: q.string(),
  skills: q('skills').filter().deref().grab({ title: q.string() }),
  createdAt: ['createdAt', q.string()],
  excerpt: q.string(),
} satisfies Selection

type PageProjectsProps = TypeFromSelection<typeof pageProjectSelection>

interface Props {
  project: PageProjectsProps
}

const { project } = Astro.props
---

<a href={`project/${project.slug}`} class="h-fit">
  <div class="rounded-lg border bg-card text-card-foreground shadow-sm">
    <div class="flex flex-col space-y-1.5 p-0">
      {
        project.mainImage && (
          <PortableTextImage
            asset={project.mainImage.asset}
            class="aspect-video w-full rounded-t-lg object-cover"
          />
        )
      }
      {
        project.title && (
          <h2 class="p-6 text-2xl font-semibold leading-none tracking-tight">
            {project.title}
          </h2>
        )
      }
    </div>
    {
      project.excerpt && (
        <p class="p-6 pt-0 text-base text-muted-foreground">
          {project.excerpt}
        </p>
      )
    }
    {
      project.skills && (
        <div class="flex flex-wrap items-center gap-2 p-6 pt-0">
          {project.skills.map((skill) => (
            <Badge className="transition-none" variant="secondary">
              {skill.title}
            </Badge>
          ))}
        </div>
      )
    }
  </div>
</a>
